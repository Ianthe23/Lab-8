     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, scanf, printf
     5                                  import exit msvcrt.dll
     6                                  import scanf msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  
     9                                  ; Se citesc de la tastatura numere (in baza 10) pana cand se introduce cifra 0. 
    10                                  ; Determinaţi şi afişaţi cel mai mare număr dintre cele citite.
    11                                  
    12                                  segment data use32 class=data
    13 00000000 00000000                    numar dd 0
    14 00000004 00000000                    maxim dd 0
    15                                  
    16 00000008 256400                      format_citire db "%d", 0
    17 0000000B 6D6178696D203D2025-         format_afisare db "maxim = %d", 0
    17 00000014 6400               
    18                                  
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; citesc de la tastatura primul numar din sir
    22 00000000 68[00000000]                    push dword numar
    23 00000005 68[08000000]                    push dword format_citire
    24 0000000A FF15[00000000]                  call [scanf]
    25 00000010 83C408                          add esp, 2*4
    26                                  
    27                                          ; verific sa nu fie 0
    28 00000013 8B15[00000000]                  mov edx, [numar]
    29 00000019 83FA00                          cmp edx, 0
    30 0000001C 7440                            je Final
    31                                  
    32                                          ; il luam ca maxim pe primul numar citit
    33 0000001E 8915[04000000]                  mov [maxim], edx
    34                                  
    35                                  
    36                                      Repeta:
    37                                          ; citesc numar cu numar de la tastatura din sirul ramas
    38 00000024 68[00000000]                    push dword numar
    39 00000029 68[08000000]                    push dword format_citire
    40 0000002E FF15[00000000]                  call [scanf]
    41 00000034 83C408                          add esp, 2*4
    42                                  
    43                                          ; verific sa nu fie 0
    44 00000037 8B15[00000000]                  mov edx, [numar]
    45 0000003D 83FA00                          cmp edx, 0
    46 00000040 741C                            je Final
    47                                  
    48                                          ; compar numarul curent cu maximul
    49 00000042 8B15[04000000]                  mov edx, [maxim]
    50 00000048 3B15[00000000]                  cmp edx, [numar]
    51                                  
    52 0000004E 7D0C                            jge NuMaxim ; daca maxim - numar >= 0, inseamna ca nu am gasit alt maxim
    53                                  
    54                                          ; altfel modificam maximul
    55 00000050 8B15[00000000]                  mov edx, [numar] 
    56 00000056 8915[04000000]                  mov [maxim], edx
    57                                  
    58                                          NuMaxim:
    59 0000005C EBC6                                jmp Repeta
    60                                      
    61                                      Final:  
    62                                          ; afisez maximul pe consola
    63 0000005E FF35[04000000]                  push dword [maxim]
    64 00000064 68[0B000000]                    push dword format_afisare
    65 00000069 FF15[00000000]                  call [printf]
    66 0000006F 83C408                          add esp, 2*4
    67                                  
    68 00000072 6A00                    	    push dword 0 
    69 00000074 FF15[00000000]          	    call [exit] 
