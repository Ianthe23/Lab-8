     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, fopen, fclose, fprintf
     5                                  import exit msvcrt.dll
     6                                  import fopen msvcrt.dll
     7                                  import fclose msvcrt.dll
     8                                  import fprintf msvcrt.dll
     9                                  
    10                                  ; Se dau in segmentul de date un nume de fisier si un text (poate contine orice tip de caracter).
    11                                  ; Sa se calculeze suma cifrelor din text. Sa se creeze un fisier cu numele dat si sa se scrie suma obtinuta in fisier.
    12                                  
    13                                  segment data use32 class=data
    14 00000000 657831392E74787400          file_name db "ex19.txt", 0
    15 00000009 7700                        file_mode db "w", 0
    16                                  
    17 0000000B 416E61206172652034-         text db "Ana are 4 mere si Maria are 18 pere.", 0
    17 00000014 206D65726520736920-
    17 0000001D 4D6172696120617265-
    17 00000026 20313820706572652E-
    17 0000002F 00                 
    18                                      l equ $-text
    19                                  
    20 00000030 73756D61203D202564-         format_afisare db "suma = %d", 0
    20 00000039 00                 
    21 0000003A FFFFFFFF                    file_descriptor dd -1
    22                                  
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; deschid fisierul
    26 00000000 68[09000000]                    push dword file_mode
    27 00000005 68[00000000]                    push dword file_name
    28 0000000A FF15[00000000]                  call [fopen]
    29 00000010 83C408                          add esp, 2*4
    30                                  
    31                                          ; verific daca s-a deschis corect
    32 00000013 83F800                          cmp eax, 0
    33 00000016 745E                            je final
    34                                  
    35 00000018 A3[3A000000]                    mov [file_descriptor], eax
    36                                  
    37 0000001D B925000000                      mov ecx, l ; lungimea textului 
    38 00000022 BE00000000                      mov esi, 0 ; indexul textului
    39 00000027 BA00000000                      mov edx, 0 ; in EDX calculez suma
    40                                  
    41                                      Repeta:
    42 0000002C 8A86[0B000000]                  mov al, [text + esi] ; pun caracterul curent in AL
    43 00000032 B330                            mov bl, '0'
    44 00000034 B739                            mov bh, '9'
    45                                  
    46                                          ; verific daca AL >= '0' si AL <= '9', adica daca este cifra
    47 00000036 38D8                            cmp al, bl
    48 00000038 7215                            jb NuCifra
    49                                  
    50 0000003A 38F8                            cmp al, bh
    51 0000003C 7711                            ja NuCifra
    52                                  
    53 0000003E 2C30                            sub al, '0' ; daca e cifra, scad '0', ca am cifra in integer
    54                                  
    55 00000040 52                              push edx ; salvez suma din EDX ca sa pot converti cifra la dword sa pot sa o adaug in EDX
    56                                  
    57 00000041 B400                            mov ah, 0
    58 00000043 66BA0000                        mov dx, 0
    59 00000047 6652                            push dx
    60 00000049 6650                            push ax
    61 0000004B 58                              pop eax
    62                                  
    63 0000004C 5A                              pop edx
    64 0000004D 01C2                            add edx, eax
    65                                  
    66                                      NuCifra:
    67 0000004F 46                              inc esi
    68 00000050 E2DA                            loop Repeta
    69                                  
    70                                      Afisare:
    71                                          ; afisez suma
    72 00000052 52                              push dword edx
    73 00000053 68[30000000]                    push dword format_afisare
    74 00000058 FF35[3A000000]                  push dword [file_descriptor]
    75 0000005E FF15[00000000]                  call [fprintf]
    76 00000064 83C40C                          add esp, 3*4
    77                                  
    78                                          ; inchid fisierul
    79 00000067 FF35[3A000000]                  push dword [file_descriptor]
    80 0000006D FF15[00000000]                  call [fclose]
    81 00000073 83C404                          add esp, 4
    82                                  
    83                                      final:
    84 00000076 6A00                    	    push dword 0 
    85 00000078 FF15[00000000]          	    call [exit] 
