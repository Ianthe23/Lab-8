     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, scanf, printf
     5                                  import exit msvcrt.dll
     6                                  import scanf msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  
     9                                  ; Se da un numar natural a (a: dword, definit in segmentul de date).
    10                                  ; Sa se citeasca un numar natural b si sa se calculeze: a + a/b. Sa se afiseze rezultatul operatiei.
    11                                  ; Valorile vor fi afisate in format decimal (baza 10) cu semn.
    12                                  
    13                                  segment data use32 class=data
    14 00000000 24000000                    a dd 36
    15 00000004 00000000                    b dd 0
    16                                  
    17 00000008 00000000                    rezultat dd 0
    18                                  
    19 0000000C 256400                      format_citire db "%d", 0
    20 0000000F 61202B20612F62203D-         format_afisare db "a + a/b = %d", 0
    20 00000018 20256400           
    21                                  
    22                                  segment code use32 class=code
    23                                      start:
    24                                          ; citesc variabila b
    25 00000000 68[04000000]                    push dword b
    26 00000005 68[0C000000]                    push format_citire
    27 0000000A FF15[00000000]                  call [scanf]
    28 00000010 83C408                          add esp, 2*4
    29                                  
    30 00000013 A1[00000000]                    mov eax, [a]
    31 00000018 BA00000000                      mov edx, 0
    32 0000001D 8B1D[04000000]                  mov ebx, [b]
    33 00000023 F7FB                            idiv ebx
    34                                  
    35 00000025 A3[08000000]                    mov [rezultat], eax
    36 0000002A A1[00000000]                    mov eax, [a]
    37 0000002F 0105[08000000]                  add [rezultat], eax
    38                                  
    39 00000035 FF35[08000000]                  push dword [rezultat]
    40 0000003B 68[0F000000]                    push dword format_afisare
    41 00000040 FF15[00000000]                  call [printf]
    42 00000046 83C408                          add esp, 2*4
    43                                  
    44 00000049 6A00                    	    push dword 0 
    45 0000004B FF15[00000000]          	    call [exit] 
